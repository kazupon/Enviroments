init_paths () {
    export PATH=$HOME/bin:$PATH
    for i in /usr/local $HOME/opt/local $HOME/homebrew; do
        local bin_path="$i/bin"
        if [ -d "$bin_path" ]; then
            export PATH=$bin_path:$PATH
        fi
        local sbin_path="$i/sbin"
        if [ -d "$sbin_path" ]; then
            export PATH=$sbin_path:$PATH
        fi
        local man_path="$i/man"
        if [ -d "$man_path" ]; then
            export MANPATH=$man_path:$MANPATH
        fi
        local share_man_path="$i/share/man"
        if [ -d "$share_man_path" ]; then
            export MANPATH=$share_man_path:$MANPATH
        fi
    done
}

init_dir_colors () {
    eval $(dircolors -b ~/.dir_colors 1>/dev/null 2>&1)
    clear
}

init_aliases () {
    # aliases
    alias grep='grep --color'
    alias egrep='egrep --color'
    alias cp='cp -a'
    alias dir='dir --color'
    alias ls='ls --color'
    alias wget='wget --no-check-certificate'
    alias js=node
    #alias titanium='/Library/Application\ Support/Titanium/mobilesdk/osx/1.6.2/titanium.py'
}

init_env () {
    # init shell
    export LANG=ja_JP.UTF-8
    export DISPLAY=:0.0
    export HISTCONTROL=ignoreboth
    export __CF_USER_TEXT_ENCODING="0x1F5:0x08000100:14"

    # init editor
    #export EDITOR='mate -w'
    export EDITOR='vim -c "set fenc=utf-8"'

    # init libraries
    export LESSEDIT='vi %f'
    export LESS='-R'
    #export LESSOPEN='| /opt/local/bin/src-hilite-lesspipe.sh %s'

    export PYTHONSTARTUP=~/.pythonstartup
    export GISTY_DIR=$HOME/tmp/gist
    export GISTY_SSL_CA=$HOME/homebrew/etc/openssl/cert.pem

    export LUA_PATH="./?.lua;$HOME/homebrew/share/lua/5.1/?.lua;$HOME/opt/local/share/lua/5.1/?.lua"
    export LUA_CPATH="./?.dylib;$HOME/homebrew/lib/lua/5.1/?.dylib;$HOME/homebrew/lib/lua/5.1/loadall.dylib;$HOME/opt/local/lib/lua/5.1/?.dylib"
    export NODE_ENV=development
    export JSTESTDRIVER_HOME=$PATH
}

init_add_config () {
    for i in "$profiles/__config__"; do
        # Additional initialize scripts
        for f in "$i"/$1 "$i"/*.sh; do
            if [ -f "$f" ]; then
                source "$f"
            fi
        done
    done
}
